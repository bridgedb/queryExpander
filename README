This project holds the Stand alone Query Expander.

It may be moved into BridgeDB in which case this repository will be closed.

This project depends on the BridgeDb project.
Instructions for configuration can be found in bridgeDb readme
https://github.com/openphacts/BridgeDb

To run the query expander the easiest way is via the webservice:
	Drop QueryExpander.war into Tomcat

To run QueryExpander without a WS
	HardCodedGraphResolver resolver = new HardCodedGraphResolver();
	SQLAccess sqlAccess = SqlFactory.createSQLAccess();
	URLMapper urlMapper =new SQLUrlMapper(false, sqlAccess, new MySQLSpecific());
	IMSMapper imsMapper = new BridgeDBMapper (resolver.getAllowedNamespaces(), urlMapper);
	QueryExpander queryExpander = new QueryExpanderImpl(imsMapper);
	 
To run using the WS and a client see:
    QueryExpanderClientFactory
    returned QueryExpanderWSClient implements the same QueryExpander interface
    
=== UGLY hard code stuff that needs to be removed in the future ====

HardCodedGraphResolver 
    Provides a mapping between Larkc graphs/Contexts and the UriSpaces of the id that are found with it.
    If an unkown graph is use the query will be valid but with extra urls in it.
    
UriSpaceMapper (in package org.bridgedb.uri.sql)
    Maps between UriSpaces and the DataSources.
    Only taken into consideration when the database is reset by loading using the "new" parameter.
    After that the current fix is to hack the SQL database.
    Urgently needs replacing with indentifiers.org methods.

    
    
    